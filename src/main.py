import asyncio
import logging
import os

from aiogram import Bot, Dispatcher
from dotenv import load_dotenv

from src.handlers import common_router, photo_router, start_router
from src.utils.logger import setup_logging

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def main():
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –î–û —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞
    setup_logging()

    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=os.getenv("BOT_TOKEN"))
    dp = Dispatcher()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(start_router)
    dp.include_router(common_router)
    dp.include_router(photo_router)

    # –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º logging –≤–º–µ—Å—Ç–æ print
    logging.info("ü§ñ –ë–û–¢ –ó–ê–ü–£–©–ï–ù –ò –ì–û–¢–û–í K –†–ê–ë–û–¢–ï!")
    logging.info("‚úÖ –í—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã")
    logging.info("üöÄ –ë–æ—Ç –Ω–∞—á–∞–ª –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
